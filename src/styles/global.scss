@import "./include-media";

// MIXINS
@mixin modifiers($map, $attribute, $prefix: "-", $separator: "-") {
  @each $key, $value in $map {
    &#{$prefix}#{$key} {
      @if type-of($value) == "map" {
        @include modifiers($value, $attribute, $separator);
      } @else {
        #{$attribute}: $value;
      }
    }
  }
}

@mixin border-radius {
  border-radius: 0.5em;
}

@mixin transition {
  transition: all 0.5s cubic-bezier(0.45, 0.05, 0.55, 0.95);
}

@mixin hover {
  @include transition;
  @include shadow;

  opacity: 85%;
}

@mixin shadow {
  -moz-box-shadow: 3px 2px 7px 1px #ccc;
  -webkit-box-shadow: 3px 2px 7px 1px #ccc;
  box-shadow: 3px 2px 7px 1px #ccc;
}

// THEME COLORS
$white: white;
$light-gray: #cbd0d5;
$dark-gray: #4a4a4a;
$black: #000000;
$orange: #ff5502;
$pink: #ff017f;
$red: #ff010d;
$green: #01d809;

$colors: (
  "black": $black,
  "dark-gray": $dark-gray,
  "light-gray": $light-gray,
  "white": $white,
  "orange": $orange,
  "pink": $pink,
  "red": $red,
  "green": $green,
);

// ELEMENT STYLES RESET
html {
  width: 100vw;
  margin: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
*,
*:before,
*:after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}
body {
  margin: 0;
  font-size: 35px;
  font-family: "Cabin", Sans-Serif;
  background-color: whitesmoke;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
p,
input,
textarea {
  font-family: "Cabin", Sans-Serif;
  font-size: 0.75em;
}
h1,
h2,
h3,
h4,
h5,
h6,
label,
button {
  font-family: "Roboto Condensed", Sans-Serif;
}
label,
button {
  font-size: 0.75em;
}
input,
textarea {
  @include border-radius;
  @include transition;

  padding: 0.5em;
  border: thin solid $light-gray;
  margin: 0.25em 0 1em 0;
  outline: none;
  max-width: 100%;

  &::placeholder {
    color: $light-gray;
    font-weight: 100;
  }

  &:focus {
    @include transition;
    @include shadow;

    border: thin solid $white;
  }

  &:hover {
    @include hover;
  }

  &:invalid:not(:placeholder-shown):not(focus) {
    border: 1px solid $red;
  }

  &[type="password"]:invalid:focus:not(:placeholder-shown) {
    & ~ .validation-text {
      max-height: 4em;
      margin-top: 2.5em;
    }
  }

  &:valid {
    border: 1px solid $green;
  }
}
button {
  @include border-radius;
  @include transition;

  padding: 0.5em 1em;
  cursor: pointer;
  border-style: none;
  background: linear-gradient(138deg, $orange, $pink, $red);
  background-size: 300% 100%;

  &:hover {
    @include hover;
    background-position: 100% 0;
  }
}

// CLASS STYLES
.text {
  @include modifiers($colors, "color");
}

.subtitle {
  opacity: 85%;
}

.overline {
  line-height: 0.7em;
  font-weight: 500;
}

.align-right {
  text-align: right;
}

.m-0 {
  margin: 0;
}

.group {
  padding: 0.5em 0;

  @include media(">=tablet") {
    padding: 0.75em 0;
  }
}

.validation-text {
  @include transition;

  font-size: 0.5em;
  overflow: hidden;
  max-height: 0;
}

.card {
  @include border-radius;
  @include shadow;
  @include transition;

  background-color: white;
  flex: 100%;
  padding: 0.5em;
  margin: 0.5em auto;
  width: 90%;

  @include media(">=tablet") {
    width: 80%;
    padding: 1em;
    margin: 1em auto;
  }

  @include media(">=desktop") {
    width: 70%;
    max-width: 800px;
  }
}

// FLEXBOX GRID
.container {
  display: flex;
  margin: auto;
  justify-content: flex-start;
  flex-wrap: wrap;

  .col {
    flex: 1;
  }

  .col-full {
    flex: 100%;
  }

  .reverse {
    justify-content: end;
  }
}
